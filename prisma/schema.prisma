generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  // image         String?
  role          String    @default("PARTICIPANT")
  accounts      Account[]
  sessions      Session[]
  forms         Form[]

  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  createdReferrals Referral[] @relation("createdByUser")
  usedReferrals    Referral[] @relation("usedByUser")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Referral {
  id          String   @id @default(cuid())
  code        String   @unique
  createdById String   @map("createdby_id")
  usedById    String?  @map("usedby_id")
  isUsed      Boolean  @default(false) // Whether the referral has been used or not, itll use only once 
  createdAt   DateTime @default(now())

  // Relations
  createdBy User   @relation("createdByUser", fields: [createdById], references: [id], onDelete: Cascade) // Admin who created the referral
  usedBy    User?  @relation("usedByUser", fields: [usedById], references: [id]) // User who used the referral (nullable)
  forms     Form[]
}

model Form {
  id            String   @id @default(cuid())
  name          String
  usn           String
  email         String
  contact       String?
  photo         String   @map("photo_url") // URL of the photo uploaded by the participant
  referralId    String?  @map("referral_id")
  createdById   String   @map("created_by_id")
  created_at    DateTime @default(now())
  collegeIdCard String   @map("college_id_card")
  college       String?
  //registrationEmailSent Boolean? @default(false) @map("registration_email_sent")

  user     User      @relation(fields: [createdById], references: [id], onDelete: Cascade)
  referral Referral? @relation(fields: [referralId], references: [id])
}
