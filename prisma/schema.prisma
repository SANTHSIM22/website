generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  // image         String?
  accounts      Account[]
  sessions      Session[]
  forms         Form[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// model Referral {
//   id           String @id @default(cuid())
//   referralCode String @map("referral_code")
//   // User         User[]

//   @@map("referrals")
// }

model Form {
  id            String   @id @default(cuid())
  name          String
  usn           String
  email         String
  contact       String?
  photo         String
  createdById   String   @map("created_by_id")
  created_at    DateTime @default(now())
  role          String   @default("PARTICIPANT")
  collegeIdCard String   @map("college_id_card")
  college       String?
  user          User     @relation(fields: [createdById], references: [id], onDelete: Cascade)
  //registrationEmailSent Boolean? @default(false) @map("registration_email_sent")
  // referral              Referral? @relation(fields: [referralId], references: [id])
  // referralId            String?   @map("referral_id")
}
